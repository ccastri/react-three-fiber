/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
        
        import React, { useRef , useEffect} from 'react'
        import { shaderMaterial, useGLTF, 
        } from '@react-three/drei'
         import * as THREE from "three";
        //  import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';

// import stripesFragment from '../shaders/stripes.fragment.glsl'
// import stripesVertex from '../shaders/stripes.vertex.glsl'
// import stripesFragment
        
        import { extend } from '@react-three/fiber'

const testShaderMaterial = shaderMaterial(
  { }, 
  // vertex shader
  /*glsl */`
  varying vec2 vUv;
void main() {
    vUv = uv;
    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
} `,
// vertex shader
  /*glsl */`
  varying vec2 vUv;
void main() {
    float strength = vUv.x;
    gl_FragColor.rgba = vec4(vec3(strength), 1.0));
}`
)

// declaratively
extend({ testShaderMaterial })
        export default function Cybertruck(props: any) {
          const group = useRef<THREE.Group>()
          const { nodes, materials }: any = useGLTF('/cybertruck.gltf')


 
          return (
            <group ref={group} {...props} dispose={null}>
      <mesh geometry={nodes.tires.geometry} material={materials['rubber.002']} />
               
      
        
<mesh geometry={nodes.steer.geometry} material={materials.gray} />
 <mesh geometry={nodes.interior003.geometry} material={materials.lights} />
{/* <mesh geometry={nodes.interior003_1.geometry} material={materials['light_f.002']} /> */}
<mesh geometry={nodes.interior003_1.geometry} castShadow>
   <primitive object={testShaderMaterial}  />
        </mesh>
<mesh geometry={nodes.interior003_2.geometry} >
              <meshStandardMaterial
          opacity={0.9}
          envMapIntensity={1}
          
          roughness={0.98}
          color={"grey"}
        /> 
        </mesh>
<mesh geometry={nodes.interior003_3.geometry} material={materials.glass_crack} />
<mesh geometry={nodes.interior003_4.geometry} material={materials.warninglights} />
<mesh geometry={nodes.interior003_5.geometry} material={materials.black} />

            </group>
          )
        }

useGLTF.preload('/cybertruck.gltf')



// <mesh geometry={nodes.tires.geometry} material={materials['rubber.002']} />
// <mesh geometry={nodes.steer.geometry} material={nodes.steer.material} />
// <mesh geometry={nodes.interior003.geometry} material={nodes.interior003.material} />
// <mesh geometry={nodes.interior003_1.geometry} material={materials['light_f.002']} />
// <mesh geometry={nodes.interior003_2.geometry} material={materials['body.002']} />
// <mesh geometry={nodes.interior003_3.geometry} material={materials.glass_crack} />
// <mesh geometry={nodes.interior003_4.geometry} material={materials['glassgray.002']} />
// <mesh geometry={nodes.interior003_5.geometry} material={materials.Light} />
